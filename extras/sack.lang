<?xml version="1.0" encoding="UTF-8"?>
<!--
    Sack syntax highlighting for GEdit
-->
<language id="sack" name="Sack" version="2.0" _section="Script">
  <metadata>
    <property name="mimetypes">image/x-skencil;text/plain</property>
    <property name="globs">*.sk;*.sack</property>
    <property name="line-comment-start">#</property>
  </metadata>
  <styles>
    <style id="keyword" name="Keyword" map-to="def:keyword"/>
    <style id="string" name="String" map-to="def:string"/>
    <style id="function-name" name="Function Name" map-to="def:function"/>
    <style id="decimal" name="Decimal number" map-to="def:decimal"/>
    <style id="floating-point" name="Floating point number" map-to="def:floating-point"/>
    <style id="boolean" name="Boolean" map-to="def:boolean"/>
    <style id="builtin-function" name="Builtin Function" map-to="def:builtin"/>
    <style id="builtin-constant" name="Builtin Constant" map-to="def:special-constant"/>
  </styles>
  <definitions>
    <define-regex id="identifier">[A-Za-z_][A-Za-z_0-9]*</define-regex>
    <define-regex id="number">[0-9]+</define-regex>

    <!-- Functions -->
    <context id="function-definition">
      <match extended="true">
        (func(ti)?)
        \s+
        (\%{identifier})
      </match>
      <include>
        <context sub-pattern="1" style-ref="keyword"/>
        <context sub-pattern="2" style-ref="function-name"/>
      </include>
    </context>
    
    <!-- Keywords -->
    <context id="keywords" style-ref="keyword">
      <keyword>func</keyword>
      <keyword>functi</keyword>
      <keyword>let</keyword>
      <keyword>if</keyword>
      <keyword>else</keyword>
      <keyword>loop</keyword>
      <keyword>in</keyword>
      <keyword>while</keyword>
      <keyword>return</keyword>
    </context>

    <!-- Builtin Functions -->
    <context id="builtin-functions" style-ref="builtin-function">
      <keyword>print</keyword>
      <keyword>input</keyword>
      <keyword>type</keyword>
      <keyword>len</keyword>
      <keyword>range</keyword>
      <keyword>int</keyword>
      <keyword>float</keyword>
      <keyword>string</keyword>
    </context>    

    <!-- String -->
    <context id="double-quoted-string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
      <start>"</start>
      <end>"</end>
    </context>
    <context id="single-quoted-string" style-ref="string" end-at-line-end="true" class="string" class-disabled="no-spell-check">
      <start>'</start>
      <end>'</end>
    </context>

    <!-- Numbers -->
    <context id="decimal" style-ref="decimal">
      <match>(\%{number})</match>
    </context>
    <context id="float" style-ref="floating-point">
      <match>((\%{number})\.(\%{number}))</match>
    </context>

    <!-- Bool -->
    <context id="bool" style-ref="boolean">
      <keyword>false</keyword>
      <keyword>true</keyword>
    </context>

    <context id="builtin-constants" style-ref="builtin-constant">
      <keyword>none</keyword>
    </context>

    <!-- Main context -->
    <context id="sack" class="no-spell-check">
      <include>
        <context ref="def:shell-like-comment"/>
        <context ref="function-definition"/>
        <context ref="keywords"/>
        <context ref="double-quoted-string"/>
        <context ref="single-quoted-string"/>
        <context ref="decimal"/>
        <context ref="float"/>
        <context ref="bool"/>
        <context ref="builtin-functions"/>
        <context ref="builtin-constants"/>
      </include>
    </context>
  </definitions>
</language>
